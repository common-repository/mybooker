var $ = jQuery.noConflict();
$(function() {

    //remove entry
      $(document).on('click', '.rementr', function(e) {
        e.preventDefault();
        var id = $(this).closest('.slrow').data('id');
        if(id !== null) {
            del_entry(id);
        }
    });
    //remove slot
    $(document).on('click', '.remsl', function(e) {
        e.preventDefault();

        var time  = $(this).data('time');
        var row   = $(this).closest('.slrow');
        var slot  = $(this).closest('.slotctn');
        var id    = $(row).data('id');
        var data  = $(row).data('time').split(',');
        var idx   = null;

        $.each(data, function(k, v) {
            if(time.length > 0 && v.indexOf(time[0]) >= 0 && v.indexOf(time[1]) >= 0) {
                //return data index
                idx = k;
            }
        });

        if(idx !== null && data.length > 1) {
            data.splice(idx, 1);
            //check if data is not empty
            if(id !== null) {
                $.ajax({
                    type: "POST",
                    url: ajax_object.ajaxurl,
                    dataType : 'json',
                    data: {
                        'action': 'mybooker_entry_update', //action setup php script
                        'id':id,
                        'datetime': data
                    },
                    beforeSend: function(jqXHR, settings) {
                        $('.ent_notice').html();
                    },
                    success: function(result) {
                        console.log(result);
                        if(result.success === true) {
                            $(slot).remove();
                            //update row data if removed
                            $(row).attr('data-time', JSON.stringify(data));
                        }
                        $('.ent_notice').html(result.message);
                    }
                });
            }
        }else if(id !== null) {
            if(confirm("Are you sure you want to delete this?")){
                del_entry(id);
            }else{
                return true;
            }
        } //stop data length
    });

    //****************************************
    //verify data before working
    var dateFormat = dpl.dateFormat; //wordpress dateformat style;
    var maxDate = '';
    var item = $('#item-selected');

    console.log(dpl);
    //check if item is selected
    if($(item).val() != '') {
    }

    $(document).on('change', '#item-selected', function() {
        var id = $(item).val();
        var selected = $('#datepicker').datepicker({ dateFormat: dateFormat }).val();
        var action = 'mybooker_request_schedule';
        var data = {
          'action': action,
          'item_id': id,
          'selected': selected
        };
        mkrequest(data);
    });

    var ssl       = $('#wpx_entry_date').val();
    //start date is April 01 + current year
    var start_day = $.datepicker.formatDate(dateFormat, new Date(ssl));

    console.log(dpl.timeFormat)

    $("#datepicker").datepicker({
        dateFormat : dateFormat,
        firstDay: 1,
        //maxDate : '+5d',
        minDate: start_day,
        //dayNamesMin: [ "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" ],
        //weekHeader: 'W',
        closeText: dpl.closeText,
        currentText: dpl.currentText,
        monthNames: dpl.monthNames,
        monthNamesShort: dpl.monthNamesShort,
        dayNames: dpl.dayNames,
        dayNamesShort: dpl.dayNamesShort,
        dayNamesMin: dpl.dayNamesMin,
        firstDay: dpl.firstDay,
        isRTL: dpl.isRTL,
        nextText:dpl.nextText,
        prevText:dpl.prevText,

        onSelect: function() {
            var selected = $(this).val();
            var id = $('#item-selected').val();
            var action = 'mybooker_request_schedule';
            var data = {
                'action': action,
                'item_id': id,
                'selected': selected
            };

            var selected_date = '';
            if (!id) {
                $('.schedule_wrapper').html('<p>'+wpx.itemsl+'</p>');
                return false;
            } else {
                $('#wpx_entry_date').val(selected);
                mkrequest(data);
            }
        }
    });

    //set date if selected
    if(ssl != '') {
        $('#datepicker').datepicker('setDate', ssl);
        //update_total();
    }
    //@TODO : should tested this
    var exist  = $('input[name="booking_datetime"]');
    if(exist.val() != '') {
        update_total();
    }

    //update today
    $(document).on('click', '#today', function(e) {
        e.preventDefault();
        var today = $(this).data('day');
        $('#datepicker').datepicker("setDate", new Date(today) );
        //$('#datepicker').trigger('change');
        $('.ui-datepicker-current-day').click();
        //$('#datepicker').change();
        //mkrequest(data);
    });

    $(document).on('hover', '#gschedule td', function() {
        $(this).find('.item-detail').toggle();
    });
    //assign time table array
    var time_tbl = [];

    $(document).on('click', '#gschedule td', function() {

        var slots   = '';
        var booked  = $('input[name="booking_datetime"]');
        var tmp_val = booked.val();

        if(!$(this).hasClass('disabled')) {

            var time      = $(this).data('time');
            var date      = $(this).data('day');
            var time_arr  = time.split('-');


            $.each(time_arr, function(i, value) {
                time_arr[i] = date.replace(/[^0-9]/gi, '') + value.replace(/[^0-9]/gi, '');
            });

            var book_value = '';
            //create custom validation rule for booking_datetime
            var validator = $( "#new_post" ).validate({
                ignore: "",
                rules : {
                          booking_datetime : {
                            counter : true,
                            //range: true
                          }
                        }
            });

            //validate exit on update
            if (booked.val() !== '') {
                //check if selected value exist in value ?
                if (booked.val().indexOf(time_arr.join('|')) >= 0) {
                    if ($(this).hasClass('selected_date')) {

                        //check time table contain current selected
                        var o = contains(time_tbl, time_arr);
                        //remove contain value
                        time_tbl.splice(o, 1);

                        //turn string to array
                        var tmp = booked.val().split(',');
                        tmp.splice($.inArray(time_arr.join('|'), tmp), 1);

                        //remove exits value
                        book_value = tmp.join(',');

                    } else {
                        //get current value (will not change)
                        book_value = booked.val();
                    }

                } else {
                      //add more value to existing value
                      book_value = booked.val() + ',' + time_arr.join('|');
                      time_tbl.push(time_arr);
                }

            } else {
                //first value
                book_value = time_arr.join('|');
                time_tbl.push(time_arr);
            }

            //update booking_datetime with new selected datetime
            $(booked).val(book_value);
            console.log(book_value);

            if(book_value != '') {
                //process element validation only
                validator.element(booked);

                console.log(validator.valid());
                //check if booking datetime is valid ( with new value)
                if(validator.valid()) {
                     //change selected class
                     $(this).toggleClass('selected_date');
                     //update booking sumerize
                     update_total();
                }else{
                     //use previous value ( new value is not valid)
                     $(booked).val(tmp_val);
                     //disable datetime select
                     return false;
                }
            }else{
                $(this).toggleClass('selected_date');
                //update booking sumerize
                update_total();
            }

        }else{
            return false;
        }
    });



    // form validate with stripe payment
    var rules = {
        // Passing the object with custom rules
        ignore: "",
        rules : {
            booking_name : {
              required : true
            },
            booking_email : {
                required : true,
                email : true
            },
            booking_datetime : {
                required : true,
                counter : true
            },
        },
        // Setting error messages for the fields
        messages: {},
        // Setting submit handler for the form
        submitHandler: function(form) {
            form.submit();
        }
    };

    //create custom validate method for booking slot
    $.validator.addMethod("counter", function(value, element) {
        //process booking datetime value
        var max = $('#item-selected').find('option:selected').data('max');

        if(max == '' || value.split(',').length <= max) {
            return true;
        }else{
            return this.optional(element);
        }


    }, function(params, element) {
        var msg = $('#item-selected').find('option:selected').data('msg-counter');
        return msg;
    });


    $.validator.addMethod("range", function(value, element) {
        var range = $('#item-selected').find('option:selected').data('range');
        var tmp = [];
        var sl = value.split(',');

        $.each(sl, function(i,v) {
            var str = v.split('|');
            tmp.push(str[0]);
        });
        // console.log(tmp);
        var min = moment(Math.min.apply(null, tmp), 'YYYYMMDDhmm');
        var max = moment(Math.max.apply(null, tmp), 'YYYYMMDDhmm');

        if(max.diff(min, 'days') >= range) {
            return this.optional(element);
        }else{
            return true;
        }
    }, function(params, element) {
        var msg = $('#item-selected').find('option:selected').data('msg-range');
        return msg
    });

    //render popup with form val
    function popup(){
          var email     = $('#booking_email').val(),
              currency  = $('#wpx_entry_currency').data('currency'),
              total     = $('#wpx_entry_total').val();

          //open checkout with further options:
          handler.open({
            //name: 'you will put the name',
            email: email,
            zipCode: false,
            currency: currency,
            amount: total*100
          });

    }

    // Close Checkout on page navigation:
    window.addEventListener('popstate', function() {
        handler.close();
    });
    //check submit send
    $('#wpx-submit').on('click', function(e) {
        e.preventDefault();
        var form = $('#new_post');
        form.validate(rules);
        if(form.valid()){ //if your form is valid
            //not require payment
            form.submit();
        }
    });
});

//check if array contain an array
function contains(a, b) {
    for(i=0; i < a.length; i++) {
        if(a[i][0] == b[0] && a[i][1] == b[1]) {
            return i;
        }
    }
}

function updateDate() {

    var book_value  = '';
    var booked      = $('input[name="booking_datetime"]');

    if (booked.val() !== '') {
        if (booked.val().indexOf(time_arr.join('|')) >= 0) {
          if ($(this).hasClass('selected_date')) {
              //turn string to array
              var tmp = booked.val().split(',');
              tmp.splice($.inArray(time_arr.join('|'), tmp), 1);
              book_value = tmp.join(',');
          } else {
              book_value = booked.val();
          }
      } else {
          book_value = booked.val() + ',' + time_arr.join('|');
      }
    } else {
        book_value = time_arr.join('|');
    }
    return booked_value;
}

function mktable(response) {

    var exist = $('input[name="booking_datetime"]').val();

    var sl    = $('#wpx_entry_date').val();
    var dateFormat = dpl.dateFormat; //date_format_php_to_js();
    var html  = '';
    var table = '<table id="gschedule">';
    var msg_short = $('.schedule_wrapper').data('short');
    var msg_long = $('.schedule_wrapper').data('long');
    var arr   = $.parseJSON(response);

    table += '<tr><th></th>';
    $.each(arr['header'], function(i, value) {
        var hd = new Date(value);
        //get selected class
        var cl = '';
        if(sl == $.datepicker.formatDate(dateFormat, hd)) {
            cl = 'selected';
        }
        table += '<th class="slot-time '+cl+'" data-date="'+$.datepicker.formatDate(dateFormat, hd)+'">';
        table += '<span>'+$.datepicker.formatDate('D', hd)+'</span><br />';
        table += '<span>'+$.datepicker.formatDate('d', hd)+'</span>';
        table += '</th>';
    });
    table += '</tr>';

    var pt = 0;
    $.each(arr['value'], function(i, value) {

        var sl = i.split('-');
        var sstart = moment(sl[0], 'hh:mm');
        var send = moment(sl[1], 'hh:mm');
        table += '<tr><td>';
        //first element
        if(pt == 0) {
            table += '<span class="sstart">' + sstart.format(dpl.timeFormat) + '</span>';
        }
        table += '<span class="send">' + send.format(dpl.timeFormat)  + '</span></td>';

        //return cell data
        $.each(value, function(id, el) {

            if(el['time'].length > 0) {
                //change class if slot is booked ()
                var cc = '';
                if(el['bookable'] == 2 && !el['data']) {
                    cc = 'disabled';
                }else{
                    cc = 'disabled booked';
                }

                table += '<td data-time="' + i + '" data-day="' + id + '" class="'+cc+'">';
            }else{
                //check if selected by checking booking_datetime value
                var a     = [];
                var cc    = '';
                //process selected time
                $.each(b = i.split('-'), function() {
                    if(exist != '') {
                      //convert existing string to array
                      var x = exist.split(',');
                      $.each(x, function (y, z) {
                          //return start and end time
                          var tmp = z.split('|');
                          //return selected time to date+time string (without format)
                          if(tmp[0] == id.replace(/[^0-9]/gi, '')+b[0].replace(/[^0-9]/gi, '') &&
                            tmp[1] == id.replace(/[^0-9]/gi, '')+b[1].replace(/[^0-9]/gi, '')) {
                                cc = 'selected_date';
                                return false;
                          }
                      });
                    }
                });
                table += '<td data-time="' + i + '" data-day="' + id + '" class="'+cc+'">';
            }
            if(el['bookable'] == 2 && !el['data']) {
                //table += wpx.namsg;
                table += '<span class="hvr">' + msg_short+'</span>';
                if(msg_long != '') {
                    table += '<div class="item-detail">'+msg_long+'</div>';
                }
            }
            //render data
            if(el['data'] && el['data'].length > 0) {

                table += '<span class="hvr">' + wpx.booked+'</span>';
                table += '<div class="item-detail">';
                $.each(el['data'], function(eli, eld) {
                    table += eld['type'] + ':' + eld['name'] + '<br />';
                });
                table += '</div>';
            }
            table += '</td>';
        });

        table += '</tr>';
        pt++;

    });
    table += '</table>';
    $('.schedule_wrapper').html(table);
}

//get data after picking date
function mkrequest(req) {
    $.ajax({
        url: ajax_object.ajaxurl,
        type: 'POST',
        data: req,
        data_type: 'json',
        beforeSend: function(data) {
            $('.schedule_wrapper').html('<p class="wait">'+wpx.wmsg+'</p>');
        },
        success: function(response) {
            console.log(response);
            $('.schedule_wrapper').html();
            mktable(response);
        }
    });
}

//get data after picking date
function del_entry(id) {
    $.ajax({
        url: ajax_object.ajaxurl,
        type: 'POST',
        data: {
            'action' : 'mybooker_entry_delete',
            'id'     : id
        },
        dataType: 'json',
        beforeSend: function(data) {
            $('.ent_notice').html();
        },
        success: function(response) {
            if(response.success === true) {
                $('.slrow').filter('[data-id="'+id+'"]').remove();
            }
            $('.ent_notice').html(response.message);
        }
    });
}

function update_total() {
    var item  = $('#item-selected').find('option:selected');
    var price = $(item).data('price');
    var name  = $(item).text();
    var slot  = $('input[name="booking_datetime"]').val().split(',');
    var cur   = $('#wpx_entry_currency').val();

    $('.booking_sum').show();
    $('.item-name').text(name);
    $('.item-cost').text(price+' '+cur);
    $('.booked-slot').text(slot.length);

    //check if slot is selected
    if($('input[name="booking_datetime"]').val() != '') {
        var total = price*slot.length;
        $('.total-cost').text(total+' '+cur);
        $('#wpx_item_price').val(price);
        $('#wpx_entry_slots').val(slot.length);
        $('#wpx_entry_total').val(total);
    }else{
        $('.booking_sum').hide();
        //$('.fmsg').text('');
    }
}

function date_format_php_to_js( $sFormat ) {
    switch( $sFormat ) {
        //Predefined WP date formats
        case 'F j, Y':
            return( 'MM dd, yy' );
            break;
        case 'Y-m-d':
            return( 'yy-mm-dd' );
            break;
        case 'm/d/Y':
            return( 'mm/dd/yy' );
            break;
        case 'd/m/Y':
            return( 'dd/mm/yy' );
            break;
        default:
            return( 'yy-mm-dd' );
    }
}
